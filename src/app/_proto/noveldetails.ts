/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.21.12
 * source: noveldetails.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export namespace novels {
    export class NovelDetails extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            novel_id?: number;
            image_url?: string;
            title?: string;
            genre?: string;
            synopsis?: string;
            tags?: string;
            author?: string;
            last_chapter?: number;
            first_chapter?: number;
            first_sub_chapter?: number;
            images?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("novel_id" in data && data.novel_id != undefined) {
                    this.novel_id = data.novel_id;
                }
                if ("image_url" in data && data.image_url != undefined) {
                    this.image_url = data.image_url;
                }
                if ("title" in data && data.title != undefined) {
                    this.title = data.title;
                }
                if ("genre" in data && data.genre != undefined) {
                    this.genre = data.genre;
                }
                if ("synopsis" in data && data.synopsis != undefined) {
                    this.synopsis = data.synopsis;
                }
                if ("tags" in data && data.tags != undefined) {
                    this.tags = data.tags;
                }
                if ("author" in data && data.author != undefined) {
                    this.author = data.author;
                }
                if ("last_chapter" in data && data.last_chapter != undefined) {
                    this.last_chapter = data.last_chapter;
                }
                if ("first_chapter" in data && data.first_chapter != undefined) {
                    this.first_chapter = data.first_chapter;
                }
                if ("first_sub_chapter" in data && data.first_sub_chapter != undefined) {
                    this.first_sub_chapter = data.first_sub_chapter;
                }
                if ("images" in data && data.images != undefined) {
                    this.images = data.images;
                }
            }
        }
        get novel_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set novel_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get image_url() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set image_url(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get title() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set title(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get genre() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set genre(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get synopsis() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set synopsis(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get tags() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set tags(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get author() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set author(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get last_chapter() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set last_chapter(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        get first_chapter() {
            return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
        }
        set first_chapter(value: number) {
            pb_1.Message.setField(this, 9, value);
        }
        get first_sub_chapter() {
            return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
        }
        set first_sub_chapter(value: number) {
            pb_1.Message.setField(this, 10, value);
        }
        get images() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set images(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        static fromObject(data: {
            novel_id?: number;
            image_url?: string;
            title?: string;
            genre?: string;
            synopsis?: string;
            tags?: string;
            author?: string;
            last_chapter?: number;
            first_chapter?: number;
            first_sub_chapter?: number;
            images?: string;
        }): NovelDetails {
            const message = new NovelDetails({});
            if (data.novel_id != null) {
                message.novel_id = data.novel_id;
            }
            if (data.image_url != null) {
                message.image_url = data.image_url;
            }
            if (data.title != null) {
                message.title = data.title;
            }
            if (data.genre != null) {
                message.genre = data.genre;
            }
            if (data.synopsis != null) {
                message.synopsis = data.synopsis;
            }
            if (data.tags != null) {
                message.tags = data.tags;
            }
            if (data.author != null) {
                message.author = data.author;
            }
            if (data.last_chapter != null) {
                message.last_chapter = data.last_chapter;
            }
            if (data.first_chapter != null) {
                message.first_chapter = data.first_chapter;
            }
            if (data.first_sub_chapter != null) {
                message.first_sub_chapter = data.first_sub_chapter;
            }
            if (data.images != null) {
                message.images = data.images;
            }
            return message;
        }
        toObject() {
            const data: {
                novel_id?: number;
                image_url?: string;
                title?: string;
                genre?: string;
                synopsis?: string;
                tags?: string;
                author?: string;
                last_chapter?: number;
                first_chapter?: number;
                first_sub_chapter?: number;
                images?: string;
            } = {};
            if (this.novel_id != null) {
                data.novel_id = this.novel_id;
            }
            if (this.image_url != null) {
                data.image_url = this.image_url;
            }
            if (this.title != null) {
                data.title = this.title;
            }
            if (this.genre != null) {
                data.genre = this.genre;
            }
            if (this.synopsis != null) {
                data.synopsis = this.synopsis;
            }
            if (this.tags != null) {
                data.tags = this.tags;
            }
            if (this.author != null) {
                data.author = this.author;
            }
            if (this.last_chapter != null) {
                data.last_chapter = this.last_chapter;
            }
            if (this.first_chapter != null) {
                data.first_chapter = this.first_chapter;
            }
            if (this.first_sub_chapter != null) {
                data.first_sub_chapter = this.first_sub_chapter;
            }
            if (this.images != null) {
                data.images = this.images;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.novel_id != 0)
                writer.writeInt32(1, this.novel_id);
            if (this.image_url.length)
                writer.writeString(2, this.image_url);
            if (this.title.length)
                writer.writeString(3, this.title);
            if (this.genre.length)
                writer.writeString(4, this.genre);
            if (this.synopsis.length)
                writer.writeString(5, this.synopsis);
            if (this.tags.length)
                writer.writeString(6, this.tags);
            if (this.author.length)
                writer.writeString(7, this.author);
            if (this.last_chapter != 0)
                writer.writeInt32(8, this.last_chapter);
            if (this.first_chapter != 0)
                writer.writeInt32(9, this.first_chapter);
            if (this.first_sub_chapter != 0)
                writer.writeInt32(10, this.first_sub_chapter);
            if (this.images.length)
                writer.writeString(11, this.images);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): NovelDetails {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new NovelDetails();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.novel_id = reader.readInt32();
                        break;
                    case 2:
                        message.image_url = reader.readString();
                        break;
                    case 3:
                        message.title = reader.readString();
                        break;
                    case 4:
                        message.genre = reader.readString();
                        break;
                    case 5:
                        message.synopsis = reader.readString();
                        break;
                    case 6:
                        message.tags = reader.readString();
                        break;
                    case 7:
                        message.author = reader.readString();
                        break;
                    case 8:
                        message.last_chapter = reader.readInt32();
                        break;
                    case 9:
                        message.first_chapter = reader.readInt32();
                        break;
                    case 10:
                        message.first_sub_chapter = reader.readInt32();
                        break;
                    case 11:
                        message.images = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): NovelDetails {
            return NovelDetails.deserialize(bytes);
        }
    }
}
